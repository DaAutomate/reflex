name: integration-test

on:
  pull_request:
    branches:
      - main
  pull_request_review:
    types: [submitted]


permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    # Specify Python versions to test against
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v3

    - run: (node -v && rm -rf "$(which node)" ||:)
    - run: (npm -v && rm -rf "$(which npm)" ||:)
    - run: (node -v || bun -v || nvm ls || npm -v) && echo "An unexpected program still exists!" && exit 1

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    # Clone Reflex Website Repo For integration tests
    - name: Clone Reflex Examples Repo
      uses: actions/checkout@v3
      with:
        repository: pynecone-io/pynecone-examples
        path: pynecone-examples

    - name: cache poetry install
      uses: actions/cache@v2
      with:
        path: ~/.local
        key: python-${{ matrix.python-version }}-poetry-1.3.1

    - uses: snok/install-poetry@v1
      with:
        version: 1.3.1
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: cache deps
      id: cache-deps
      uses: actions/cache@v2
      with:
        path: .venv
        key: python-${{ matrix.python-version }}-pydeps-${{ hashFiles('**/poetry.lock') }}

    - name: Poetry Install
      run: poetry install --no-interaction
    - name: Install Requirements
      working-directory: ./pynecone-examples/counter
      run: poetry run pip install -r requirements.txt
    - name: Init Website
      working-directory: ./pynecone-examples/counter
      run: poetry run reflex init
    - name: Check for errors
      run: |
        chmod +x ./scripts/integration.sh
        ./scripts/integration.sh ./pynecone-examples/counter dev
