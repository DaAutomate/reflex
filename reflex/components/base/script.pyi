"""Stub file for reflex/components/base/script.py"""
# ------------------- DO NOT EDIT ----------------------
# This file was generated by `reflex/utils/pyi_generator.py`!
# ------------------------------------------------------
from typing import Any, Callable, Dict, Literal, Optional, Union, overload

from reflex.components.component import Component
from reflex.event import EventHandler, EventSpec
from reflex.style import Style
from reflex.vars import BaseVar, Var

REFERRAL_POLICY_LITERAL = Literal[
    "",
    "no-referrer",
    "no-referrer-when-downgrade",
    "origin",
    "origin-when-cross-origin",
    "same-origin",
    "strict-origin",
    "strict-origin-when-cross-origin",
    "unsafe-url",
]

class Script(Component):
    @overload
    @classmethod
    def create(  # type: ignore
        cls,
        *children,
        src: Optional[Union[Var[str], str]] = None,
        strategy: Optional[
            Union[
                Var[Literal["afterInteractive", "beforeInteractive", "lazyOnload"]],
                Literal["afterInteractive", "beforeInteractive", "lazyOnload"],
            ]
        ] = None,
        type: Optional[Union[Var[str], str]] = None,
        async_: Optional[Union[Var[bool], bool]] = None,
        defer: Optional[Union[Var[bool], bool]] = None,
        integrity: Optional[Union[Var[str], str]] = None,
        crossorigin: Optional[Union[Var[str], str]] = None,
        fetchpriority: Optional[
            Union[Var[Literal["high", "low", "auto"]], Literal["high", "low", "auto"]]
        ] = None,
        nomodule: Optional[Union[Var[bool], bool]] = None,
        referrerpolicy: Optional[
            Union[
                Var[
                    Literal[
                        "",
                        "no-referrer",
                        "no-referrer-when-downgrade",
                        "origin",
                        "origin-when-cross-origin",
                        "same-origin",
                        "strict-origin",
                        "strict-origin-when-cross-origin",
                        "unsafe-url",
                    ]
                ],
                Literal[
                    "",
                    "no-referrer",
                    "no-referrer-when-downgrade",
                    "origin",
                    "origin-when-cross-origin",
                    "same-origin",
                    "strict-origin",
                    "strict-origin-when-cross-origin",
                    "unsafe-url",
                ],
            ]
        ] = None,
        attributionsrc: Optional[Union[Var[Union[bool, str]], str, bool]] = None,
        blocking: Optional[Union[Var[str], str]] = None,
        style: Optional[Style] = None,
        key: Optional[Any] = None,
        id: Optional[Any] = None,
        class_name: Optional[Any] = None,
        autofocus: Optional[bool] = None,
        custom_attrs: Optional[Dict[str, Union[Var, str]]] = None,
        on_blur: Optional[
            Union[EventHandler, EventSpec, list, Callable, BaseVar]
        ] = None,
        on_click: Optional[
            Union[EventHandler, EventSpec, list, Callable, BaseVar]
        ] = None,
        on_context_menu: Optional[
            Union[EventHandler, EventSpec, list, Callable, BaseVar]
        ] = None,
        on_double_click: Optional[
            Union[EventHandler, EventSpec, list, Callable, BaseVar]
        ] = None,
        on_error: Optional[
            Union[EventHandler, EventSpec, list, Callable, BaseVar]
        ] = None,
        on_focus: Optional[
            Union[EventHandler, EventSpec, list, Callable, BaseVar]
        ] = None,
        on_load: Optional[
            Union[EventHandler, EventSpec, list, Callable, BaseVar]
        ] = None,
        on_mount: Optional[
            Union[EventHandler, EventSpec, list, Callable, BaseVar]
        ] = None,
        on_mouse_down: Optional[
            Union[EventHandler, EventSpec, list, Callable, BaseVar]
        ] = None,
        on_mouse_enter: Optional[
            Union[EventHandler, EventSpec, list, Callable, BaseVar]
        ] = None,
        on_mouse_leave: Optional[
            Union[EventHandler, EventSpec, list, Callable, BaseVar]
        ] = None,
        on_mouse_move: Optional[
            Union[EventHandler, EventSpec, list, Callable, BaseVar]
        ] = None,
        on_mouse_out: Optional[
            Union[EventHandler, EventSpec, list, Callable, BaseVar]
        ] = None,
        on_mouse_over: Optional[
            Union[EventHandler, EventSpec, list, Callable, BaseVar]
        ] = None,
        on_mouse_up: Optional[
            Union[EventHandler, EventSpec, list, Callable, BaseVar]
        ] = None,
        on_ready: Optional[
            Union[EventHandler, EventSpec, list, Callable, BaseVar]
        ] = None,
        on_scroll: Optional[
            Union[EventHandler, EventSpec, list, Callable, BaseVar]
        ] = None,
        on_unmount: Optional[
            Union[EventHandler, EventSpec, list, Callable, BaseVar]
        ] = None,
        **props,
    ) -> "Script":
        """Create an inline or user-defined script.

        If a string is provided as the first child, it will be rendered as an inline script
        otherwise the `src` prop must be provided.

        The following event triggers are provided:

        on_load: Execute code after the script has finished loading.
        on_ready: Execute code after the script has finished loading and every
            time the component is mounted.
        on_error: Execute code if the script fails to load.

        Args:
            *children: The children of the component.
            src: Required unless inline script is used
            strategy: When the script will execute: afterInteractive (defer-like behavior) | beforeInteractive | lazyOnload (async-like behavior)
            type: Indicates the type of script represented
            async_: Specifies if the script(and dependencies for module scripts) will be fetched in parallel to parsing and evaluated as soon as available
            defer: Indicate to a browser that the script is meant to be executed after the document has been parsed, but before firing DOMContentLoaded event
            integrity: Contains inline metadata that a user agent can use to verify that a fetched resource has been delivered without unexpected manipulation
            crossorigin: Sets the mode of the request to an HTTP CORS Request.
            fetchpriority: Provides a hint of the relative priority to use when fetching an external script.
            nomodule:  indicate that the script should not be executed in browsers that support ES modules.
            referrerpolicy: Indicates which referrer to send when fetching the script, or resources fetched by the script
            attributionsrc: Specifies that you want the browser to send an Attribution-Reporting-Eligible header along with the script resource request.
            blocking: Explicitly indicates that certain operations should be blocked on the fetching of the script
            style: The style of the component.
            key: A unique key for the component.
            id: The id for the component.
            class_name: The class name for the component.
            autofocus: Whether the component should take the focus once the page is loaded
            custom_attrs: custom attribute
            **props: The props of the component.

        Returns:
            The component.

        Raises:
            ValueError: when neither children nor `src` are specified.
        """
        ...

script = Script.create
